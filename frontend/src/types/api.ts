/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/archiveselectoralesducevipof/{id}": {
    get: operations["Proxy"];
  };
  "/archiveselectoralesducevipof/search": {
    post: operations["SearchAsStream"];
  };
  "/archiveselectoralesducevipof/search/csv": {
    post: operations["SearchAsCsv"];
  };
  "/elasticsearch/proxy_search": {
    post: operations["Proxy"];
  };
  "/import": {
    post: operations["Import"];
  };
  "/misc/ping": {
    get: operations["Ping"];
  };
  "/misc/echo": {
    post: operations["Echo"];
  };
}

export interface components {
  schemas: {
    ArchiveElectoralCandidat: {
      nom: string;
      prenom: string;
      type: string;
      sexe: string;
      age: string;
      "age-normalise": string;
      profession: string;
      "mandat-en-cours": string;
      "mandat-passe": string;
      associations: string;
      "autres-statuts": string;
      soutien: string;
      liste: string;
      decorations: string;
    } & { [key: string]: any };
    ArchiveElectoralItem: {
      id: string;
      candidats: components["schemas"]["ArchiveElectoralCandidat"][];
      date: string;
      subject: string[];
      title: string;
      type: string;
      "contexte-election": string;
      "contexte-tour": string;
      cote: string;
      departement: string;
      "departement-insee": string;
      "departement-nom": string;
      circonscription: string;
      images: {
        thumb?: string;
        url: string;
      }[];
      pdf: string;
    } & { [key: string]: any };
    SearchResponse_ArchiveElectoralItem_: {
      hits: {
        hits: {
          _source: components["schemas"]["ArchiveElectoralItem"];
          _score: number;
          _id: string;
          _type: string;
          _index: string;
        }[];
        max_score: number;
        total: {
          relation: string;
          value: number;
        };
      };
      _scroll_id?: string;
    };
    SearchResponse_any_: {
      hits: {
        hits: {
          _source: { [key: string]: any };
          _score: number;
          _id: string;
          _type: string;
          _index: string;
        }[];
        max_score: number;
        total: {
          relation: string;
          value: number;
        };
      };
      _scroll_id?: string;
    };
    /** Error object for import report. */
    ReportError: {
      name: string;
      message: string;
      items: string[];
    } & { [key: string]: any };
    /** Import report */
    ImportReport: {
      /** Duration (in ms) of the import. */
      took: number;
      /** Number of item imported */
      total: number;
      /** List of errors */
      errors: components["schemas"]["ReportError"][];
      /** Settings used for the import */
      settings: {
        index: string;
        to: string;
        from: string;
      };
    } & { [key: string]: any };
    /** Options for the import execution. */
    ImportOptions: {
      /** (optional if ids is defined) The date from which we need to retrieve the last modified item */
      date?: string;
      /** (optional) The date to which we need to retrieve the last modified item */
      to?: string;
      /** (optional) The name of the ES index */
      index?: string;
      /** (optional) A list of ids to import */
      ids?: string[];
    } & { [key: string]: any };
  };
  responses: {};
  parameters: {};
  requestBodies: {};
  headers: {};
}

export interface operations {
  Proxy: {
    parameters: {};
    responses: {
      /** Ok */
      200: {
        content: {
          "application/json": components["schemas"]["SearchResponse_any_"];
        };
      };
      /** Internal Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": { [key: string]: any };
      };
    };
  };
  SearchAsStream: {
    parameters: {};
    responses: {
      /** Ok */
      200: {
        content: {
          "application/json": components["schemas"]["SearchResponse_ArchiveElectoralItem_"];
        };
      };
      /** Internal Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": { [key: string]: any };
      };
    };
  };
  SearchAsCsv: {
    parameters: {
      query: {
        filename: string;
      };
    };
    responses: {
      /** Ok */
      200: {
        content: {
          "application/json": string;
        };
      };
      /** Internal Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": { [key: string]: any };
      };
    };
  };
  Import: {
    parameters: {};
    responses: {
      /** Ok */
      200: {
        content: {
          "application/json": components["schemas"]["ImportReport"];
        };
      };
      /** Internal Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ImportOptions"];
      };
    };
  };
  Ping: {
    parameters: {};
    responses: {
      /** Ok */
      200: {
        content: {
          "application/json": string;
        };
      };
    };
  };
  Echo: {
    parameters: {};
    responses: {
      /** Ok */
      200: {
        content: {
          "application/json": { [key: string]: any };
        };
      };
    };
    requestBody: {
      content: {
        "application/json": { [key: string]: any };
      };
    };
  };
}
